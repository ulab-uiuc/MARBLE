coordinate_mode: graph
relationships: 
- - agent1
  - agent2
  - collaborate with
- - agent1
  - agent3
  - collaborate with
- - agent1
  - agent4
  - collaborate with
- - agent1
  - agent5
  - collaborate with
- - agent2
  - agent3
  - collaborate with
- - agent2
  - agent4
  - collaborate with
- - agent2
  - agent5
  - collaborate with
- - agent3
  - agent4
  - collaborate with
- - agent3
  - agent5
  - collaborate with
- - agent4
  - agent5
  - collaborate with

llm: "gpt-3.5-turbo"

environment:
  type: DB
  name: "DB Simulation Environment"
  max_iterations: 5
  init_sql: ""
      
  anomalies:  
    - anomaly: LOCK_CONTENTION
      threads: 100
      ncolumn: 20
      nrow:    20000
      colsize: 100

communication: False

task:
  content: |    
    Recently, during operation, the database has seen performance issues. Use sql queries to find out what is wrong, and find out the reason that caused it. The root cause can be only two of the following: 'INSERT_LARGE_DATA', 'MISSING_INDEXES', 'LOCK_CONTENTION', 'VACUUM', 'REDUNDANT_INDEX', 'FETCH_LARGE_DATA', 'POOR_JOIN_PERFORMANCE,CPU_CONTENTION'. The planner should assign different agent to analyze possbility for each root cause and make final decision. Agents can also chat with each other to share information.  Please make the decision after using all these tools, as a premature decision may lead to incorrect conclusions.
  output_format: |
    Please make the decision after exploring all rootcauses, as a premature decision may lead to incorrect conclusions.
    Please choose the most likely cause of the database anomaly from the following list, based on the expert agents: 
    'INSERT_LARGE_DATA', 'LOCK_CONTENTION', 'VACUUM', 'REDUNDANT_INDEX', 'FETCH_LARGE_DATA'
    You can ONLY CHOOSE two.
    You have access to the Database, and you can perform queries to get the required information. Agents can also chat with each other to share information.
    These tables include:
    - `pg_stat_statements` (for detailed query stats)
    - `pg_locks` (for lock waits and contention)
    - `pg_stat_user_indexes` (for index usage)
    - `pg_indexes` (for index definitions)
    - `pg_stat_all_tables` (detailed statistics about vacuuming, auto vacuuming, and analyze operations for each table)
    - `pg_stat_progress_vacuum` (for vacuum progress)
    - `pg_stat_user_tables` (for dead tuples and vacuum stats)
  labels: 
    - 'INSERT_LARGE_DATA'
    - 'LOCK_CONTENTION'
    - 'VACUUM'
    - 'REDUNDANT_INDEX'
    - 'FETCH_LARGE_DATA'
  root_causes: 
    - 'LOCK_CONTENTION'
  number_of_labels_pred: 2

agents:
  - type: BaseAgent
    agent_id: agent1
    profile: "agent1 will explore the possibility of INSERT_LARGE_DATA as a root cause. Recommended tables: `pg_stat_statements`. You can search for INSERTs."
  - type: BaseAgent
    agent_id: agent2
    profile: "agent2 will explore the possibility of LOCK_CONTENTION as a root cause. Recommended tables: `pg_locks`."
  - type: BaseAgent
    agent_id: agent3
    profile: "agent3 will explore the possibility of VACUUM as a root cause. Recommended to search for inappropiate VACUUMs from `pg_stat_all_tables`: SELECT query, calls, total_plan_time, rows, mean_plan_time FROM pg_stat_statements WHERE query LIKE 'VACUUM%';"
  - type: BaseAgent
    agent_id: agent4
    profile: "agent4 will explore the possibility of REDUNDANT_INDEX as a root cause. Recommended tables: `pg_stat_user_indexes`, `pg_indexes`."
  - type: BaseAgent
    agent_id: agent5
    profile: "agent5 will explore the possibility of FETCH_LARGE_DATA as a root cause. Recommended to search for SELECTs from `pg_stat_statements`."
    
memory:
  type: SharedMemory

metrics: 
  accuracy: true
  response_time: true

output:
  file_path: "result/BASE_LOCK_CONTENTION_RESULT.json"

engine_planner:
  initial_progress: "Starting the simulation."