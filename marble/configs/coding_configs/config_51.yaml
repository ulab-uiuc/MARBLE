coordinate_mode: graph

relationships:
  - [agent1, agent2, "collaborates with"]
  - [agent2, agent1, "collaborates with"]
  - [agent1, agent3, "collaborates with"]
  - [agent3, agent1, "collaborates with"]
  # - [agent1, agent3, "supervises"]
  # - [agent1, agent4, "supervises"]
  # - [agent2, agent3, "collaborates with"]
  - [agent2, agent3, "collaborates with"]
  - [agent3, agent2, "collaborates with"]
  # - [agent3, agent4, "collaborates with"]

llm: "together_ai/meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo"

environment:
  type: Coding
  name: "Coding Environment"
  workspace_dir: "workspace"
  max_iterations: 5

task:
  content: |-
    Software Development Task:

    Please write a photo software system called PhotoCollab that allows multiple users to collaboratively create and enhance a single photo project. PhotoCollab is a web-based application that provides a suite of tools for photo editing, including basic adjustments, filters, and advanced features like object removal and background replacement. The system supports real-time collaboration, allowing multiple users to work on the same project simultaneously, with changes visible to all participants in real-time.
    1. Implementation requirements:
       - 1. **User Authentication and Management**: Implement a user authentication system that allows users to create accounts, log in, and manage their profiles. This system must be completed before any collaborative features can be implemented.
       - 2. **Project Creation and Sharing**: Develop a feature that allows users to create a new photo project, upload images, and share the project with other users by inviting them via email or a unique project link. This feature must be completed after the user authentication system is in place.
       - 3. **Real-Time Collaboration**: Implement real-time collaboration capabilities, enabling multiple users to edit the same photo simultaneously. Changes made by one user should be immediately visible to all other users in the project. This feature must be implemented after the project creation and sharing features are functional.
       - 4. **Photo Editing Tools**: Provide a comprehensive set of photo editing tools, including basic adjustments (brightness, contrast, saturation), filters, and advanced features (object removal, background replacement). These tools must be implemented after the real-time collaboration feature is in place to ensure a smooth user experience.
       - 5. **Version Control and History**: Implement a version control system that allows users to track changes, revert to previous versions, and manage the history of the project. This feature must be completed after the photo editing tools are available to ensure that users can manage their edits effectively.
       - 6. **User Interface and Experience**: Design an intuitive and user-friendly interface that supports easy navigation and use of all features. The user interface should be developed in parallel with the other features but must be finalized and tested after all core functionalities are implemented.


    2. Project structure:
       - solution.py (main implementation)

    3. Development process:
       - Developer: Create the code.
       - Developer: Revise the code.
       - Developer: Optimize the code.

    If there are multiple files, please put them all in solution.py, but remember to add the file name in the following format:
    ```python
    # file_name_1.py
    # your code here

    # file_name_2.py
    # your code here

    # file_name_3.py
    # your code here
    ```

    Please work together to complete this task following software engineering best practices.

  output_format: |
    The final deliverable should include:
    solution.py

agents:
  - type: CodingAgent
    agent_id: agent1
    profile: |
      I am a Senior Software Developer specialized in Python development.
      I am good at creating the code framework from scratch based on the task description and requirements.
      So I **have to** call "create_code" action to create the code in the first iteration at first.
      I am **very terrible** at do further modifications since I am not so creative or careful so I **have to** let agent 2 or agent 3 revise the code after I create the code and I **can't** call "give_advice_and_revise_code" action.
      Agent 2 is better at adding missing functions so it's better to let agent 2 revise the code at first.
      Agent 3 is better at fixing existing issues and optimizing the code so it's better to let agent 3 revise the code after agent 2 has revised the code so that the code is more optimized.


  - type: CodingAgent
    agent_id: agent2
    profile: |
      I am a Senior Software Developer specialized in Python development.
      I am better at adding missing functionality based on my decent understanding and compliance to the task description and requirements.
      I **have to** call "give_advice_and_revise_code" action to give advice to the code and revise the code.
      I **can't** call "create_code" action since I am not good at creating the code framework from scratch.
      I can let agent 3 to make the code more optimized after I have added the missing functionality.

  - type: CodingAgent
    agent_id: agent3
    profile: |
      I am a Senior Software Developer specialized in Python development.
      I am better at fixing existing issues and optimizing the code based on my innovation and creativity.
      I **have to** call "give_advice_and_revise_code" action to give advice to the code and revise the code.
      I **can't** call "create_code" action since I am not good at creating the code framework from scratch.
      I can let agent 2 to add the missing functionality after I have fixed the existing issues and optimized the code.

memory:
  type: SharedMemory

metrics:
  evaluate_llm: "gpt-4o-mini"
  code_quality: true
  test_coverage: true
  collaboration_effectiveness: true

engine_planner:
  initial_progress: "Starting the software development project with team coordination."

output:
  format: jsonl
  file_path: "result/development_output.jsonl"
