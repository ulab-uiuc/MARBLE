coordinate_mode: graph

relationships:
  - [agent1, agent2, "collaborates with"]
  - [agent2, agent1, "collaborates with"]
  - [agent1, agent3, "collaborates with"]
  - [agent3, agent1, "collaborates with"]
  # - [agent1, agent3, "supervises"]
  # - [agent1, agent4, "supervises"]
  # - [agent2, agent3, "collaborates with"]
  - [agent2, agent3, "collaborates with"]
  - [agent3, agent2, "collaborates with"]
  # - [agent3, agent4, "collaborates with"]

llm: "gpt-3.5-turbo"

environment:
  type: Coding
  name: "Coding Environment"
  workspace_dir: "workspace"
  max_iterations: 5

task:
  content: |-
    Software Development Task:

    Please write a business software application called TeamSyncPro that facilitates seamless collaboration and project management across various departments within an organization. TeamSyncPro is a comprehensive project management system that integrates task management, resource allocation, and communication tools to enhance team productivity and project outcomes.
    1. Implementation requirements:
       - The frontend should provide a user-friendly interface with features for task assignment, status updates, and real-time communication. It should support role-based access control to ensure that users can only view and interact with the information relevant to their roles.
       - The backend should handle the core functionalities such as task management, resource allocation, and performance tracking. It should support RESTful API endpoints for frontend interactions and should be capable of handling multiple concurrent users and large datasets.
       - The database should be designed to efficiently store and retrieve project data, including tasks, user profiles, and communication logs. It should support transactions and have mechanisms for data backup and recovery.
       - The system should support integration with third-party tools commonly used in business environments, such as calendar applications, email services, and CRM systems, to enhance its utility and flexibility.
       - The application should have a robust reporting module that can generate various types of reports, such as project progress reports, resource utilization reports, and performance metrics, to help managers make informed decisions.
       - The frontend and backend should communicate seamlessly through well-defined APIs, ensuring that data is synchronized in real-time and that the user experience is smooth and responsive.


    2. Project structure:
       - solution.py (main implementation)

    3. Development process:
       - Developer: Create the code.
       - Developer: Revise the code.
       - Developer: Optimize the code.
       
    You are highly skilled agents with deep expertise in solving complex problems.
    Your task is to carefully analyze the provided information, solve the problem, and improve upon your solution through a reflection and revision process.

    For each problem-solving step, follow this multi-step process:

    Initial Answer: Draft your initial response to the question.
    Reflection: Review the initial answer for clarity, completeness, and whether it follows the guidelines.
    Revision: Make necessary revisions based on your reflection to improve your answer.
    Final Answer: Present the final, revised answer, depending on the context.

    If there are multiple files, please put them all in solution.py, but remember to add the file name in the following format:
    ```python
    # file_name_1.py
    # your code here

    # file_name_2.py
    # your code here

    # file_name_3.py
    # your code here
    ```

    Please work together to complete this task following software engineering best practices.


  output_format: |
    The final deliverable should include:
    solution.py

agents:
  - type: CodingAgent
    agent_id: agent1
    profile: |
      I am a Senior Software Developer specialized in Python development.
      I am good at creating the code framework from scratch based on the task description and requirements.
      So I **have to** call "create_code" action to create the code in the first iteration at first.
      I am **very terrible** at do further modifications since I am not so creative or careful so I **have to** let agent 2 or agent 3 revise the code after I create the code and I **can't** call "give_advice_and_revise_code" action.
      Agent 2 is better at adding missing functions so it's better to let agent 2 revise the code at first.
      Agent 3 is better at fixing existing issues and optimizing the code so it's better to let agent 3 revise the code after agent 2 has revised the code so that the code is more optimized.


  - type: CodingAgent
    agent_id: agent2
    profile: |
      I am a Senior Software Developer specialized in Python development.
      I am better at adding missing functionality based on my decent understanding and compliance to the task description and requirements.
      I **have to** call "give_advice_and_revise_code" action to give advice to the code and revise the code.
      I **can't** call "create_code" action since I am not good at creating the code framework from scratch.
      I can let agent 3 to make the code more optimized after I have added the missing functionality.

  - type: CodingAgent
    agent_id: agent3
    profile: |
      I am a Senior Software Developer specialized in Python development.
      I am better at fixing existing issues and optimizing the code based on my innovation and creativity.
      I **have to** call "give_advice_and_revise_code" action to give advice to the code and revise the code.
      I **can't** call "create_code" action since I am not good at creating the code framework from scratch.
      I can let agent 2 to add the missing functionality after I have fixed the existing issues and optimized the code.

memory:
  type: SharedMemory

metrics:
  evaluate_llm: "gpt-4o-mini"
  code_quality: true
  test_coverage: true
  collaboration_effectiveness: true

engine_planner:
  initial_progress: "Starting the software development project with team coordination."

output:
  format: jsonl
  file_path: "result/development_output.jsonl"
